{"version":3,"sources":["components/Clocks.js","components/Home.js","components/App.js","reportWebVitals.js","index.js"],"names":["Clocks","props","sec","Min","useState","time","setTime","state","setState","handleStop","idx","stopTimer","parseInt","className","Button","variant","onClick","timer","setInterval","prev","addTimer","handleStart","remove","clockId","Home","datas","setDatas","id","tempArr","clearInterval","splice","push","uuid","length","map","data","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAmDeA,MA/Cf,SAAgBC,GAAQ,IAInBC,EACAC,EALkB,EACIC,mBAAS,GADb,mBACdC,EADc,KACRC,EADQ,OAEMF,mBAAS,SAFf,mBAEdG,EAFc,KAEPC,EAFO,KAchBC,EAAa,SAACC,GACnBT,EAAMU,UAAUD,IAqBjB,OAHAP,EAAMS,SAASP,EAAO,IAEtBH,EAAMG,EAAO,GAEZ,sBAAKQ,UAAU,aAAf,UACC,sBAAKA,UAAU,QAAf,UACEV,EAAM,GAAK,IAAMA,EAAMA,EADzB,KACgCD,EAAM,GAAK,IAAMA,EAAMA,KAEvD,cAACY,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAvBJ,WACT,UAAVT,GAA+B,WAAVA,IAZN,SAACG,GACpB,IAAIO,EAAQC,aAAY,WACvBZ,GAAQ,SAACa,GAAD,OAAUA,EAAO,OACvB,KACHlB,EAAMmB,SAASV,EAAKO,GASnBI,CAAYpB,EAAMS,KAClBF,EAAS,SACW,SAAVD,IACVE,EAAWR,EAAMS,KACjBF,EAAS,YAiBT,SAAqDD,IACrD,cAACO,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAdN,WACpBP,EAAWR,EAAMS,KACjBT,EAAMqB,OAAOrB,EAAMS,IAAKT,EAAMsB,UAY7B,wB,iBCcYC,MArDf,WAAiB,IAAD,EACapB,mBAAS,IADtB,mBACPqB,EADO,KACAC,EADA,KASTN,EAAW,SAACO,EAAIV,GACrB,IAAIW,EAAO,YAAQH,GACnBG,EAAQD,GAAIV,MAAQA,EACpBS,EAASE,IAGJjB,EAAY,SAACgB,GAClB,IAAIC,EAAO,YAAQH,GACnBI,cAAcD,EAAQD,GAAIV,OAC1BS,EAASE,IAGJN,EAAS,SAACZ,EAAKa,GAEpB,IAAIK,EAAO,YAAQH,GACfG,EAAQlB,GAAKa,UAAYA,IAC5BK,EAAQE,OAAOpB,EAAK,GACpBgB,EAASE,KAIX,OACC,sBAAKf,UAAU,SAAf,UACU,qBAAKc,GAAG,QAAR,8BACT,cAACb,EAAA,EAAD,CAAQD,UAAU,OAAOG,QA9BT,WACjB,IAAIY,EAAO,YAAQH,GACnBG,EAAQG,KAAK,CAAER,QAASS,MAAQf,MAAO,OACvCS,EAASE,IA2BR,iBACkB,IAAjBH,EAAMQ,OACN,uDAEAR,EAAMS,KAAI,SAACC,EAAMzB,GAAP,OACT,8BACC,cAAC,EAAD,CACCY,OAAQA,EACRX,UAAWA,EACXS,SAAUA,EACVG,QAASY,EAAKZ,QACdb,IAAKA,KANGyB,EAAKZ,gBClCLa,MARf,WACC,OACC,qBAAKvB,UAAU,MAAf,SACE,cAAC,EAAD,OCMWwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a4bf7deb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction Clocks(props) {\r\n\tconst [ time, setTime ] = useState(0);\r\n\tconst [ state, setState ] = useState('Start');\r\n\r\n\tlet sec = 0;\r\n\tlet Min = 0;\r\n\r\n\tconst handleStart = (idx) => {\r\n\t\tlet timer = setInterval(() => {\r\n\t\t\tsetTime((prev) => prev + 1);\r\n\t\t}, 1 * 1000);\r\n\t\tprops.addTimer(idx, timer);\r\n\t};\r\n\r\n\tconst handleStop = (idx) => {\r\n\t\tprops.stopTimer(idx);\r\n\t};\r\n\r\n\tconst handleStartStop = () => {\r\n\t\tif (state === 'Start' || state === 'Resume') {\r\n\t\t\thandleStart(props.idx);\r\n\t\t\tsetState('Stop');\r\n\t\t} else if (state === 'Stop') {\r\n\t\t\thandleStop(props.idx);\r\n\t\t\tsetState('Resume');\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleRemove = () => {\r\n\t\thandleStop(props.idx);\r\n\t\tprops.remove(props.idx, props.clockId);\r\n\t};\r\n\r\n\tMin = parseInt(time / 60);\r\n\r\n\tsec = time % 60;\r\n\treturn (\r\n\t\t<div className=\"clock-body\">\r\n\t\t\t<div className=\"clock\">\r\n\t\t\t\t{Min < 10 ? '0' + Min : Min}: {sec < 10 ? '0' + sec : sec}\r\n\t\t\t</div>\r\n\t\t\t<Button variant=\"success\" onClick={handleStartStop}>{state}</Button>\r\n\t\t\t<Button variant=\"danger\" onClick={handleRemove}>Remove</Button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Clocks;\r\n","import React, { useState } from 'react';\r\nimport Clocks from './Clocks';\r\nimport uuid from 'react-uuid';\r\nimport '../App.css';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nfunction Home() {\r\n\tconst [ datas, setDatas ] = useState([]);\r\n\r\n\tconst handleAdd = () => {\r\n\t\tlet tempArr = [ ...datas ];\r\n\t\ttempArr.push({ clockId: uuid(), timer: null });\r\n\t\tsetDatas(tempArr);\r\n\t};\r\n\r\n\tconst addTimer = (id, timer) => {\r\n\t\tlet tempArr = [ ...datas ];\r\n\t\ttempArr[id].timer = timer;\r\n\t\tsetDatas(tempArr);\r\n\t};\r\n\r\n\tconst stopTimer = (id) => {\r\n\t\tlet tempArr = [ ...datas ];\r\n\t\tclearInterval(tempArr[id].timer);\r\n\t\tsetDatas(tempArr);\r\n\t};\r\n\r\n\tconst remove = (idx, clockId) => {\r\n\t\t// console.log('from parent ' + idx);\r\n\t\tlet tempArr = [ ...datas ];\r\n\t\tif (tempArr[idx].clockId === clockId) {\r\n\t\t\ttempArr.splice(idx, 1);\r\n\t\t\tsetDatas(tempArr);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n            <div id=\"title\">Online StopWatch</div>\r\n\t\t\t<Button className=\"my-3\" onClick={handleAdd}>Add</Button>\r\n\t\t\t{datas.length === 0 ? (\r\n\t\t\t\t<div>No stopWatch created</div>\r\n\t\t\t) : (\r\n\t\t\t\tdatas.map((data, idx) => (\r\n\t\t\t\t\t<div key={data.clockId}>\r\n\t\t\t\t\t\t<Clocks\r\n\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\tstopTimer={stopTimer}\r\n\t\t\t\t\t\t\taddTimer={addTimer}\r\n\t\t\t\t\t\t\tclockId={data.clockId}\r\n\t\t\t\t\t\t\tidx={idx}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","import '../App.css';\nimport Home from './Home';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t\t<Home />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}